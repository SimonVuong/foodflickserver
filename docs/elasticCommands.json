########## START SNAPSHOTS ##########

#create repo (directory to hold snaps)
PUT /_snapshot/foodflick
{
    "type": "fs",
    "settings": {
        "location": "foodflick"
    }
}

#create snapshot called rest-mapping-only in the rest repo. index must be empty. missing item.likes
PUT /_snapshot/foodflick/rest-mapping-only?wait_for_completion=true
{
  "indices": "rests",
  "ignore_unavailable": true,
  "include_global_state": false
}

#create snapshot called rests-copy with data
PUT /_snapshot/foodflick/rests-copy?wait_for_completion=true
{
  "indices": "rests",
  "ignore_unavailable": true,
  "include_global_state": false
}

#create snapshot called rests with data
PUT /_snapshot/foodflick/rests?wait_for_completion=true
{
  "indices": "rests",
  "ignore_unavailable": true,
  "include_global_state": false
}


# restore to just rest mapping with no data
#POST /_snapshot/foodflick/rest-mapping-only/_restore

# restore rest index with data from rests snapshot
POST /_snapshot/foodflick/rests/_restore
POST /_snapshot/foodflick/rests-copy/
POST /_snapshot/foodflick/all/_restore
#POST /_snapshot/foodflick/rest-mapping-only/_restore

GET /_snapshot/foodflick/_all
GET /_snapshot/foodflick/rest-mapping-only
GET /_snapshot/foodflick/rests
GET /_snapshot/foodflick/
# delete a snapshot
DELETE /_snapshot/foodflick/rests
DELETE /_snapshot/foodflick/users
DELETE /_snapshot/foodflick/tags
DELETE /_snapshot/foodflick/rests-copy


PUT /_snapshot/foodflick/users?wait_for_completion=true
{
  "indices": "users",
  "ignore_unavailable": true,
  "include_global_state": false
}

PUT /_snapshot/foodflick/tags?wait_for_completion=true
{
  "indices": "tags",
  "ignore_unavailable": true,
  "include_global_state": false
}




########## END SNAPSHOTS ##########



########## setup ##########

POST _reindex
{
  "source": {
    "index": "newrests",
    "_source": {
      "excludes": [
        "menu.items.price"
      ]
    }
  },
  "dest": {
    "index": "rests"
  },
  "script": {
    "source": """
      def menu = ctx._source.menu;
      if (menu != null) {
        for (int i = 0 ; i < menu.length; i++) {
          def items = menu[i].items;
          if (items != null) {
            for (int j = 0; j < items.length; j++) {
              def item = items[j];
              item.prices = [];
            } 
          }
        }
      }
    """
  }
}

POST _reindex
{
  "source": {
    "index": "rests",
    "_source": {
      "excludes": [
        "menu.items.optionGroups"
      ]
    }
  },
  "dest": {
    "index": "restscopy"
  }
}



POST _reindex
{
  "source": {
    "index": "restscopy"
  },
  "dest": {
    "index": "rests"
  }
}

#POST _bulk
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "italian" } }
{ "name" : "Italian", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "french" } }
{ "name" : "French", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "chinese" } }
{ "name" : "Chinese", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "asian" } }
{ "name" : "Asian", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "seafood" } }
{ "name" : "Seafood", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "mexican" } }
{ "name" : "Mexican", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "indian" } }
{ "name" : "Indian", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "korean" } }
{ "name" : "Korean", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "indian" } }
{ "name" : "Indian", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "japanese" } }
{ "name" : "Japanese", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "sushi" } }
{ "name" : "Sushi", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "thai" } }
{ "name" : "Thai", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "american"} }
{ "name" : "American", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "bar" } }
{ "name" : "Bars", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "pizza" } }
{ "name" : "Pizza", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "desserts" } }
{ "name" : "Desserts", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "bakeries" } }
{ "name" : "Bakeries", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "diner" } }
{ "name" : "Diner", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "sandwhiches" } }
{ "name" : "Sandwiches", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "breakfast" } }
{ "name" : "Breakfast", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "brunch" } }
{ "name" : "Brunch", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "asianFusion" } }
{ "name" : "Asian fusion", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "burgers" } }
{ "name" : "Burgers", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "fastFood" } }
{ "name" : "Fast food", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "takeout" } }
{ "name" : "Takeout", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "soups" } }
{ "name" : "Soups", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "noodles" } }
{ "name" : "Noodles", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "ramen" } }
{ "name" : "Ramen", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "coffee" } }
{ "name" : "Coffee", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "bubbleTea" } }
{ "name" : "Bubble tea", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "taiwanese" } }
{ "name" : "Taiwanese", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "turkish" } }
{ "name" : "Turkish", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "halal" } }
{ "name" : "Halal", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "mediterranean" } }
{ "name" : "Mediterranean", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "poke" } }
{ "name" : "Poke", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "cantonese" } }
{ "name" : "Cantonese", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "ayce" } }
{ "name" : "AYCE", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "spanish" } }
{ "name" : "Spanish", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "polish" } }
{ "name" : "Polish", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "middleEastern" } }
{ "name" : "Middle Eastern", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "cocktails" } }
{ "name" : "Cocktails", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "salad" } }
{ "name" : "Salad", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "vietnamese" } }
{ "name" : "Vietnamese", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "iceCream" } }
{ "name" : "Ice cream", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "frozenYogurt" } }
{ "name" : "Frozen yogurt", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "delivery" } }
{ "name" : "Delivery", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "greek" } }
{ "name" : "Greek", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "vegetarian" } }
{ "name" : "Vegetarian", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "vegan" } }
{ "name" : "Vegan", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "cafe" } }
{ "name" : "Cafe", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "casual" } }
{ "name" : "Casual", "count": 0 }
{ "index" : { "_index" : "tags", "_type" : "tag", "_id": "buffet" } }
{ "name" : "Buffet", "count": 0 }
########## end setup ##########



########## manage ##########

GET /_all/_settings

GET /_nodes/settings

GET /_cat/indices?v

########## end manage ##########

########## read ##########

GET /rests/rest/eVpbBmcBu4xW7khTaw6n

GET /rests/_search?
{
    "query" : {
          "term": { "favorites.users.keyword": "auth0|5aa88907856be20dbbd0345d" }
    }
}

GET /rests/_search?
{
    "query" : {
      "term": { "profile.name.keyword": "China Delight" }
    }
}

GET /new_rests/_search?
{
    "query" : {
        "match_all" : {}
    }
}

GET /rests/_search?
{
    "query" : {
        "match_all" : {}
    }
}

GET /users/_search?
{
    "query" : {
        "match_all" : {}
    }
}

GET /tags/_search?
{
    "query" : {
        "match_all" : {}
    }
}

GET /tags/_search?
{
    "query" : {
          "terms": { "name.keyword": ["Italian", "Cafe", "Ice cream", "Thai"] }
    }
}

GET /rests/rest/eVpbBmcBu4xW7khTaw6n
########## end read ##########


########## delete ##########

POST rests/_delete_by_query
 {
  "query": { 
    "match_all": {}
  }
}

DELETE rests
DELETE restcopy
DELETE users
#DELETE tags

DELETE rests/rest/rohuLWkBVBQEqv1uHn-S


#POST users/_delete_by_query
# {
#  "query": { 
#    "match_all": {}
#  }
#}

POST rests/_delete_by_query
 {
  "query": { 
    "terms": { "profile.name.keyword": [ "bank"]}
  }
}

#POST tags/_delete_by_query
 {
    "query" : {
        "term": { "name.keyword": "random" }
    }
}

#POST tags/_delete_by_query
 {
  "query": { 
    "match_all": {}
  }
}

########## end delete ##########






########## write ##########


#POST rests/rest/
{
  "profile": {
      "name": "another elastic rest",
      "phone": "123",
      "description": "another custom description"
  },
  "location": {
    "address": {
      "address1": "adr1",
      "city": "city",
      "state": "NJ",
      "zip": "023"
    }
  },
  "owner": {
      "userId": "auth0|5a78c1ccebf64a46ecdd0d9c",
      "email": "a@a.com"
  }
}


POST rests/_update_by_query?conflicts=proceed
{
    "script": {
      "source": """
        def menu = ctx._source.menu;
        if (menu != null) {
          for (int i = 0 ; i < menu.length; i++) {
            def items = menu[i].items;
            if (items != null) {
              for (int j = 0; j < items.length; j++) {
                def item = items[j];
                item.optionGroups = params.group;
              } 
            }
          }
        }
      """,
      "lang": "painless",
      "params": {
        "group": []
      }
    },
    "query" : {
        "match_all" : {}
    }
}

POST rests/_update_by_query?conflicts=proceed
{
    "script": {
      "source": """
        def menu = ctx._source.menu;
        if (menu != null) {
          for (int i = 0 ; i < menu.length; i++) {
            def items = menu[i].items;
            if (items != null) {
              for (int j = 0; j < items.length; j++) {
                def item = items[j];
                item.printers = params.printers;
              } 
            }
          }
        }
      """,
      "lang": "painless",
      "params": {
        "printers": []
      }
    },
    "query" : {
        "match_all" : {}
    }
}

POST rests/_update_by_query?conflicts=proceed
{
    "script": {
      "source": """
        ctx._source.printers = params.printers;
      """,
      "params": {
        "printers": []
      }
    },
    "query" : {
        "match_all" : {}
    }
}


POST rests/_update_by_query?conflicts=proceed
{
    "script": {
      "source": """
        ctx._source.favorites = params.favorite;
      """,
      "params": {
        "favorite": {
          "count": 0,
          "users": []
        }
      }
    },
    "query" : {
        "match_all" : {}
    }
}


#POST /rests/rest/slngmmQB9nHU-Kj-F4A7/_update
{
  "script": {
    "source": """
        ctx.op = "noop";
        def menu = ctx._source.menu;
        for (int i = 0; i < menu.length; i++) {
          if (menu[i].name.equals(params.categoryName)) {
            List items = menu[i].items;
            for (int j = 0; j < items.length; j++) {
              if (items[j].name.equals(params.itemName)) {
                items[j].likes++;
                ctx.op = "index";
                break;
              }
            }
          }
        }
    """,
    "lang": "painless",
    "params": {
      "categoryName": "Desserts",
      "itemName": "Raspberry Sorbet"
    }
  },
  "_source": true
}


POST rests/_update_by_query?conflicts=proceed
{
  "script": {
    "source": """
        def menu = ctx._source.menu;
        for (int i = 0; i < menu.length; i++) {
          if (menu[i].name.equals(params.categoryName)) {
            menu[i].items = params.items;
          }
        }
    """,
    "lang": "painless",
    "params": {
      "categoryName": "Noodle Corner",
      "items": []
    }
  },
  "_source": true
}

POST tags/_update_by_query?conflicts=proceed
{
    "script": {
      "source": """
        ctx._source.count = 0;
      """
    },
    "query" : {
        "match_all" : {}
    }
}

#POST /rests/rest/eVpbBmcBu4xW7khTaw6n/_update
{
  "script": {
    "source": """
        ctx._source.profile.tags = [];
    """
  },
  "_source": true
}
########## end write ##########





########## suggest ##########

POST rests/_search?pretty
{
  "suggest": {
      "rest-suggest" : {
          "prefix" : "mas", 
          "completion" : { 
              "field" : "profile.name.suggest"
          }
      }
  }
}

POST rests/_search?pretty
{
  "suggest": {
      "rest-suggest" : {
          "prefix" : "ma", 
          "completion" : { 
              "field" : "profile.name.suggest"
          }
      }
  }
}

POST rests/_search?pretty
{
  "profile.name.suggest": {
      "rest-suggest" : {
          "prefix" : "elast", 
          "completion" : { 
              "field" : "suggest" 
          }
      }
  }
}


########## end suggest ##########





########## mappings ##########
GET /rests/_mapping/rest
GET /newrests/_mapping/rest


PUT rests/_mapping/rest
{
  "properties": {
    "printers": {
      "properties": {
        "name" : {
          "type": "text",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            }
          }
        },
        "ip": {
          "type": "text",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            }
          }
        },
        "port" : {
          "type": "text"
        },
        "type": {
          "type": "text"
        }
      }
    }
  }
}


PUT rests/_mapping/rest
{
  "properties": {
    "banking": {
      "type":   "date",
      "format": "epoch_millis"
    }
  }
}

PUT rests/_mapping/rest
{
  "properties": {
    "banking": {
      "properties": {
        "accountNumber": {
          "type": "text",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            }
          }
        },
        "routingNumber": {
          "type": "text",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            }
          }
        },
        "stripeId": {
          "type": "text",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            }
          }
        }
      }
    }
  }
}

PUT rests
{
  "mappings": {
    "rest": {
      "dynamic": "false",
      "properties": {
        "banking": {
          "properties": {
            "accountNumber": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                }
              }
            },
            "routingNumber": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                }
              }
            },
            "stripeId": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                }
              }
            }
          }
        },
        "createdDate": {
          "type": "date",
          "format": "epoch_millis"
        },
        "favorites": {
          "properties": {
            "count": {
              "type": "integer"
            },
            "users": {
              "properties": {
                "createdDate": {
                  "type": "date",
                  "format": "epoch_millis"
                },
                "userId": {
                  "type": "text",
                  "fields": {
                    "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                    }
                  }
                }
              }
            }
          }
        },
        "feedback": {
          "properties": {
            "createdDate": {
              "type": "date",
              "format": "epoch_millis"
            },
            "feedback": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                }
              }
            },
            "userId": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                }
              }
            }
          }
        },
        "location": {
          "properties": {
            "address": {
              "properties": {
                "address1": {
                  "type": "text",
                  "fields": {
                    "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                    }
                  }
                },
                "address2": {
                  "type": "text",
                  "fields": {
                    "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                    }
                  }
                },
                "city": {
                  "type": "text",
                  "fields": {
                    "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                    }
                  }
                },
                "state": {
                  "type": "text",
                  "fields": {
                    "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                    }
                  }
                },
                "zip": {
                  "type": "text",
                  "fields": {
                    "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                    }
                  }
                }
              }
            },
            "geo": {
              "type": "geo_point"
            }
          }
        },
        "managers": {
          "properties": {
            "email": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                }
              }
            },
            "userId": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                }
              }
            }
          }
        },
        "menu": {
          "properties": {
            "printers": {
              "properties": {
                "name" : {
                  "type": "text",
                  "fields": {
                    "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                    }
                  }
                },
                "ip": {
                  "type": "text",
                  "fields": {
                    "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                    }
                  }
                },
                "port" : {
                  "type": "text"
                },
                "type": {
                  "type": "text"
                }
              }
            },
            "description": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                },
                "suggest": {
                  "type": "completion",
                  "analyzer": "simple",
                  "preserve_separators": true,
                  "preserve_position_increments": true,
                  "max_input_length": 50,
                  "contexts": [
                    {
                      "name": "location",
                      "type": "GEO",
                      "precision": 6,
                      "path": "location.geo"
                    }
                  ]
                }
              }
            },
            "items": {
              "properties": {
                "description": {
                  "type": "text",
                  "fields": {
                    "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                    },
                    "suggest": {
                      "type": "completion",
                      "analyzer": "simple",
                      "preserve_separators": true,
                      "preserve_position_increments": true,
                      "max_input_length": 50,
                      "contexts": [
                        {
                          "name": "location",
                          "type": "GEO",
                          "precision": 6,
                          "path": "location.geo"
                        }
                      ]
                    }
                  }
                },
                "flick": {
                  "type": "text",
                  "fields": {
                    "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                    }
                  }
                },
                "likes": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "users": {
                      "properties": {
                        "createdDate": {
                          "type": "date",
                          "format": "epoch_millis"
                        },
                        "userId": {
                          "type": "text",
                          "fields": {
                            "keyword": {
                              "type": "keyword",
                              "ignore_above": 256
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "name": {
                  "type": "text",
                  "fields": {
                    "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                    },
                    "suggest": {
                      "type": "completion",
                      "analyzer": "simple",
                      "preserve_separators": true,
                      "preserve_position_increments": true,
                      "max_input_length": 50,
                      "contexts": [
                        {
                          "name": "location",
                          "type": "GEO",
                          "precision": 6,
                          "path": "location.geo"
                        }
                      ]
                    }
                  }
                },
                "optionGroups": {
                  "properties": {
                    "options": {
                      "properties": {
                        "name": {
                          "type": "text",
                          "fields": {
                            "keyword": {
                              "type": "keyword",
                              "ignore_above": 256
                            }
                          }
                        },
                        "price": {
                          "type": "float"
                        }
                      }
                    }
                  }
                },
                "prices": {
                  "properties": {
                    "label": {
                      "type": "text",
                      "fields": {
                        "keyword": {
                          "type": "keyword",
                          "ignore_above": 256
                        }
                      }
                    },
                    "value": {
                      "type": "float"
                    }
                  }
                }
              }
            },
            "name": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                },
                "suggest": {
                  "type": "completion",
                  "analyzer": "simple",
                  "preserve_separators": true,
                  "preserve_position_increments": true,
                  "max_input_length": 50,
                  "contexts": [
                    {
                      "name": "location",
                      "type": "GEO",
                      "precision": 6,
                      "path": "location.geo"
                    }
                  ]
                }
              }
            }
          }
        },
        "owner": {
          "properties": {
            "email": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                }
              }
            },
            "userId": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                }
              }
            }
          }
        },
        "printers": {
          "properties": {
            "name" : {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                }
              }
            },
            "ip": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                }
              }
            },
            "port" : {
              "type": "text"
            },
            "type": {
              "type": "text"
            }
          }
        },
        "profile": {
          "properties": {
            "description": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                },
                "suggest": {
                  "type": "completion",
                  "analyzer": "simple",
                  "preserve_separators": true,
                  "preserve_position_increments": true,
                  "max_input_length": 50,
                  "contexts": [
                    {
                      "name": "location",
                      "type": "GEO",
                      "precision": 6,
                      "path": "location.geo"
                    }
                  ]
                }
              }
            },
            "name": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                },
                "suggest": {
                  "type": "completion",
                  "analyzer": "simple",
                  "preserve_separators": true,
                  "preserve_position_increments": true,
                  "max_input_length": 50,
                  "contexts": [
                    {
                      "name": "location",
                      "type": "GEO",
                      "precision": 6,
                      "path": "location.geo"
                    }
                  ]
                }
              }
            },
            "phone": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                }
              }
            },
            "tags": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                },
                "suggest": {
                  "type": "completion",
                  "analyzer": "simple",
                  "preserve_separators": true,
                  "preserve_position_increments": true,
                  "max_input_length": 50,
                  "contexts": [
                    {
                      "name": "location",
                      "type": "GEO",
                      "precision": 6,
                      "path": "location.geo"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}

PUT rests
{
  "mappings": {
    "rest": {
      "properties": {
        "feedback": {
          "createdDate": {
            "type":   "date",
            "format": "createdDate"
          }
        }
      }
    }
  }
}



PUT users
{
  "mappings": {
    "user": {
      "properties": {
        "flicks": {
          "properties": {
            "flick": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                }
              }
            },
            "createdDate": {
              "type": "date"
            }
          }
        }
      }
    }
  }
}

GET /users/_mapping/user


PUT tags
{
  "mappings": {
    "tag": {
      "properties": {
        "name": {
          "type": "text",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            },
            "suggest": {
              "type": "completion"
            }
          }
        },
        "count": {
          "type": "integer"
        }
      }
    }
  }
}

GET /tags/_mapping/tag

########## end mappings ##########